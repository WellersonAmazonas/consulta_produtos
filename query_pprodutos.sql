SELECT 
    EST_F1.CODPROD AS codigo,
    PCPRODUT.CODFAB AS referencia,  -- ? Referência do produto
    PCPRODUT.DESCRICAO,
    PCPRODUT.UNIDADE,
    PCPRODUT.QTUNITCX AS EMBALAGEM,
    
    -- Grupo (buscando da tabela de grupos)
    (SELECT DESCRICAO FROM PCSECAO WHERE PCSECAO.CODSEC = PCPRODUT.CODSEC 
        FETCH FIRST 1 ROWS ONLY) AS grupo,

    -- Marca (mantendo subquery)
    (SELECT MARCA FROM PCMARCA WHERE CODMARCA = PCPRODUT.CODMARCA 
        FETCH FIRST 1 ROWS ONLY) AS MARCA,

    -- Preço de venda (pegando o maior valor disponível para evitar múltiplas linhas)
    (SELECT MAX(PVENDA) FROM PCPRECO WHERE CODPROD = EST_F1.CODPROD) AS "PRECO_VENDA",

    -- ICMS na Venda para cada filial
    CASE 
        WHEN (SELECT MAX(CODICMTAB) FROM PCTRIBUT WHERE CODST = TABPR_F1.CODST AND TABPR_F1.NUMREGIAO = 2) = 20 
        THEN 20 ELSE 0 
    END AS "ICMS_VENDA_F1",
    
    CASE 
        WHEN (SELECT MAX(CODICMTAB) FROM PCTRIBUT WHERE CODST = TABPR_F2.CODST AND TABPR_F2.NUMREGIAO = 2) = 20 
        THEN 20 ELSE 0 
    END AS "ICMS_VENDA_F2",

    CASE 
        WHEN (SELECT MAX(CODICMTAB) FROM PCTRIBUT WHERE CODST = TABPR_F3.CODST AND TABPR_F3.NUMREGIAO = 2) = 20 
        THEN 20 ELSE 0 
    END AS "ICMS_VENDA_F3",

    CASE 
        WHEN (SELECT MAX(CODICMTAB) FROM PCTRIBUT WHERE CODST = TABPR_F6.CODST AND TABPR_F6.NUMREGIAO = 2) = 20 
        THEN 20 ELSE 0 
    END AS "ICMS_VENDA_F6",

    -- Dados fiscais
    PCPRODUT.NBM AS NCM,
    PCPRODUT.CODCEST AS CEST,
    PCPRODUT.CODAUXILIAR AS "COD_BARRAS",

    -- Preço de custo por filial
    EST_F1.CUSTOFIN AS "CUSTO_F1",
    EST_F2.CUSTOFIN AS "CUSTO_F2",
    EST_F3.CUSTOFIN AS "CUSTO_F3",
    EST_F6.CUSTOFIN AS "CUSTO_F6",

    -- Estoque calculado corretamente por filial
    (EST_F1.QTESTGER - EST_F1.QTBLOQUEADA - EST_F1.QTINDENIZ - EST_F1.QTRESERV) AS ESTOQUE_F1,
    (EST_F2.QTESTGER - EST_F2.QTBLOQUEADA - EST_F2.QTINDENIZ - EST_F2.QTRESERV) AS ESTOQUE_F2,
    (EST_F3.QTESTGER - EST_F3.QTBLOQUEADA - EST_F3.QTINDENIZ - EST_F3.QTRESERV) AS ESTOQUE_F3,
    (EST_F6.QTESTGER - EST_F6.QTBLOQUEADA - EST_F6.QTINDENIZ - EST_F6.QTRESERV) AS ESTOQUE_F6

FROM 
    PCEST EST_F1
    JOIN PCEST EST_F2 ON EST_F1.CODPROD = EST_F2.CODPROD AND EST_F2.CODFILIAL = 2
    JOIN PCEST EST_F3 ON EST_F1.CODPROD = EST_F3.CODPROD AND EST_F3.CODFILIAL = 3
    JOIN PCEST EST_F6 ON EST_F1.CODPROD = EST_F6.CODPROD AND EST_F6.CODFILIAL = 6
    JOIN PCPRODUT ON PCPRODUT.CODPROD = EST_F1.CODPROD
    JOIN PCTABPR TABPR_F1 ON TABPR_F1.CODPROD = PCPRODUT.CODPROD AND TABPR_F1.NUMREGIAO = 2
    JOIN PCTABPR TABPR_F2 ON TABPR_F2.CODPROD = PCPRODUT.CODPROD AND TABPR_F2.NUMREGIAO = 2
    JOIN PCTABPR TABPR_F3 ON TABPR_F3.CODPROD = PCPRODUT.CODPROD AND TABPR_F3.NUMREGIAO = 2
    JOIN PCTABPR TABPR_F6 ON TABPR_F6.CODPROD = PCPRODUT.CODPROD AND TABPR_F6.NUMREGIAO = 2

WHERE 
    EST_F1.CODFILIAL = 1 
    -- AND PCPRODUT.CODPROD = 55933  -- ?? Remova para consultar todos os produtos
    
AND PCPRODUT.CODSEC NOT IN (SELECT CODSEC FROM PCSECAO WHERE DESCRICAO = 'TINTA PRODUZIDA') -- ?? Remova para consultar todos os grupos


ORDER BY 
    PCPRODUT.DESCRICAO;
